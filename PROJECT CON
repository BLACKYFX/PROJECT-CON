from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_marshmallow import Marshmallow

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///realestate.db'
db = SQLAlchemy(app)
ma = Marshmallow(app)

# Models
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(50), nullable=False)

class Property(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    description = db.Column(db.String(200), nullable=False)
    price = db.Column(db.Float, nullable=False)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    user = db.relationship('User', backref=db.backref('properties', lazy=True))

# Schemas
class UserSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User

class PropertySchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Property

user_schema = UserSchema()
users_schema = UserSchema(many=True)
property_schema = PropertySchema()
properties_schema = PropertySchema(many=True)

# Routes
@app.route('/register', methods=['POST'])
def register():
    username = request.json['username']
    password = request.json['password']
    new_user = User(username=username, password=password)
    db.session.add(new_user)
    db.session.commit()
    return user_schema.jsonify(new_user)

@app.route('/login', methods=['POST'])
def login():
    username = request.json['username']
    password = request.json['password']
    user = User.query.filter_by(username=username, password=password).first()
    if user:
        return user_schema.jsonify(user)
    else:
        return jsonify({"message": "Invalid credentials"}), 401

@app.route('/properties', methods=['GET'])
def get_properties():
    properties = Property.query.all()
    return properties_schema.jsonify(properties)

@app.route('/properties', methods=['POST'])
def add_property():
    title = request.json['title']
    description = request.json['description']
    price = request.json['price']
    user_id = request.json['user_id']
    new_property = Property(title=title, description=description, price=price, user_id=user_id)
    db.session.add(new_property)
    db.session.commit()
    return property_schema.jsonify(new_property)

if __name__ == '__main__':
    app.run(debug=True)
